[ { "title": "Getting started with the Microsoft-Windows-Threat-Intelligence ETW Provider", "url": "/posts/ETW-TI-Provider/", "categories": "Blogging, Threat Hunting", "tags": "Threat Hunting, ELK stack, ETW, Threat-Intelligence, Blue Teaming, Attack Detection", "date": "2022-03-15 18:10:00 +0100", "snippet": "TL;DRThe Microsoft-Windows-Threat-Intelligence ETW Provider is a very powerful tool to detect many kill chain attacks such as memory injection and others.In this blog, I will show a way to take advantage of this provider, consume its events logs and ship them to ELK stack.Before jumping to the technical steps, let’s talk a little bit about the Threat Intelligence ETW(Event Tracing for Windows) Provider. The Microsoft-Windows-Threat-Intelligence ETW Provider is an excellent tool to detect process injection, and other type of attacks. Unlike usermode hooking or in-process ETW Providers, avoiding or tampering with the Threat-Intelligence is very difficult. However, to subscribe to this Provider requires a process with very special privileges, marked as Protected Process Light (PPL) ‘Anti-Malware’ or higher. To legitimately run a program at this level you must submit a driver to Microsoft to be co-signed by them, something not everyone has the inclination or reputation to do. source : pathtofileLet’s get started …DISCLAMER:In this article, I am not going to cover the deployment of the ELK stack. I may write another blog talking about multiple ways to deploy it in your own lab. But mainly here I am just using this docker-compose which will do all the boring configuration stuff on your behalf.Required Tools Windows 10 VM ELK stack WinlogBeat NSSM SealighterTIWalkthroughStep 1On a windows 10 VM, download the Assets from the links below : SealighterTI.exe + sealighter_provider.manPS: Disable windows defender before downloading the SealighterTI.exe, because it will consider it malicious.Otherwise, you can clone the repository on your machine and build the exe. For my case, I just downloaded the pre-built binarie, it works fine.Check the SealighterTI Project for more details.Step 2Create a repository on the C:\\Program Files\\ location, and move the two downloaded files.Then, go to Microsoft windows defender, and add that folder to windows defender exclusion.Select the SealighterTI folder and click Ok.after that you can activate windows defender real-time protection again.Step 3First Open up the sealigher_provider.man in a text editor, and replace all uses of !!SEALIGHTER_LOCATION!! with the full path to the SealighterTI.exe binary.Then from an elevated command prompt run:wevtutil im path/to/sealigher_provider.manStep 4Download NSSM ,Extract it and move it to C:\\Program Files\\. What is nssm.exe? The genuine nssm.exe file is a software component of NSSM by Iian Patterson.Non-Sucking Service Manager is a service manager for Microsoft Windows. Nssm.exe launches the Non-Sucking Service Manager program. This is not an essential Windows process and can be disabled if known to create problems. NSSM is a free utility that manages background and foreground services and processes. The program can be set to automatically restart failing services. The program also logs all progress in an Event Log, making it easier to identify applications that aren’t behaving as they should.We will use NSSM to run SealighterTI as a service automatically without the need to start it every time you reboot your machine.open an Administrator command prompt, change directory to the location of the nssm exe, and run the following command.nssm install SealighterTIa window will pop-up as the picture shows above. you just have to fill in the path of the sealighterTI folder and executable and the argument -d . Then click on Install service .And finally the SealighterTI service is installed succesfully.Step 5Open windows services.msc , Find SealighterTI service and click on Start.and you’re done.Now go to Event Viewer and check The Sealighter/Operational logs.NOTE :After running the SealighterTI service, you’ll discover that the number of event logs on event viewer doesn’t bypass 5** event, and you may think that the TI provider doesn’t log correctly.however that is not correct,But you just need to configure the Log proprieties on the right panel on event viewer, then change The maximum log size to a bigger number ^_^Step 6Now it’s Time to ship Microsoft-Windows-Threat-Intelligence ETW provider logs to ELK stack. Download Winlogbeat zip and extract it. Create a Folder on C:\\Program Files\\ and name it winlogbeat and move all the extracted files from the zip folder. Open winlogbeat.yml and add this line under the winlogbeat.event_logs .winlogbeat.event_logs: - name: Sealighter/OperationalMore configuration details can be found on the official elastic website. Open powershell as administrator and change directory to C:\\Program Files\\Winlogbeat, and run commands below :PowerShell.exe -ExecutionPolicy UnRestricted -File .\\install-service-winlogbeat.ps1.\\winlogbeat.exe test config -c .\\winlogbeat.yml -e.\\winlogbeat.exe setup -eStart-Service winlogbeatFinally, go to ELK and check, you’ll see all the logs Ingested successfully to Kibana web Interface.ConclusionToday, we managed to succesfully view and consume the Microsoft-Windows-Threat-Intelligence Provider events log, and ship them To ELK stack. In the Next post, I will show you how we can take advantage of this provider to detect some adversary attack like Process Injection, and to understand why Microsoft’s “Threat Intelligence Tracing” is useful and much needed in detection of modern and often obscure injection techniques." }, { "title": "Setting up an automated Red Team Infrastructure (REDCELL)", "url": "/posts/REDCELL/", "categories": "My Projects, REDCELL", "tags": "red teaming, infrastructure as code, devops, ansible, vagrant", "date": "2021-09-16 18:10:00 +0100", "snippet": "Redcell is an Infrastructure as Code Lab of red teamers operations , it’s built using Vagrant and Ansible , and it can be deployed and run locally .This lab is made of six virtual machines that seems necessary for the Cyber Kill Chain steps : scanVM running kali-Linux machine with needed tools like Nmap , dirsearch , … crackVM running Ubuntu machine with Hashcat tool installed covenantVM running ubuntu machine with Covenant C2 tool installed and running on port 7443 . covenantRedirector running ubuntu machine with nginx redirector and behaving as a reverse proxy for the covenantVM C2 machine . phishingVM running ubuntu machine with gophish tool installed and running on ports 3333 and 80 . gophishRedirector running ubuntu machine with nginx redirector and behaving as a reverse proxy for the phishingVM machine . The lab setup is automated using vagrant and ansible automation tools.The picture below show the Projects working principe:I will talk about it on the Next few coming days…REDCELL’s PoCThe video below is the Poof of Concept of the REDCELL infrastructure project : " }, { "title": "Setting up an Nginx Redirector for covenant C2", "url": "/posts/setting-up-an-Nginx-C2-Redirector/", "categories": "Blogging, Red Teaming", "tags": "red teaming, reverse proxy, covenant C2", "date": "2021-09-08 14:10:00 +0100", "snippet": "What is covenanat C2 ?Covenant is a .NET command and control framework and web application that aims to highlight the attack surface of .NET, make the use of offensive .NET tradecraft easier, and serve as a collaborative command and control (C2) platform for red teamers.Covenant is an ASP.NET Core, cross-platform application that includes a web-based interface that allows for multi-user collaboration.The Wiki documents most of Covenant’s core features and how to use them.What is a C2 redirector ?Redirectors are an essential component for advanced red teaming. Redirectors allow malicious traffic to come and go as it pleases, but remain hidden from detection.The objective of a redirector is to mask the core C2 infrastructure from prying blue team eyes, and allow the red team operator hidden communication with a compromised machine.Redirectors seek to mask and protect their backend server, the main orchestration server for all C2.The picture below explains the principe idea of C2 redirector :Simplified, but you get the idea…Redirectors offer many advantages around obfuscation but they also offer a resilience and persistence advantage. If the blue team are able to successfully identify and block an IP address associated with the C2 infrastructure, the red team operator can quickly spin up a redirector and continue to keep the core backend server IP address hidden. There is many solutions to do so, but we choose to use an Nginx web server and make it behave like a reverse proxy to redirect the traffic communication between the covenant c2 server and the victim machine.Now and after getting an Idea about what is a C2 redirector, let’s move to the Implementation :) .ImplementationAfter Installing Covenant C2 tools on your machine and making sure that is work correctly, you will just need to keep in mind its @ip address, because we will need it later for the nginx setup configuration file.Now prepare another Linux machine – in my case I am using ubuntu – and install Nginx server on it.The next step is nothing more than editing the “/etc/nginx/sites-enabled/default” file, delete all the previous content , and add the following configuration :server { listen 80 default_server; listen [::]:80 default_server; root /var/www/html; index index.html index.htm index.nginx-debian.html; server_name *.example.org; location / { try_files $uri $uri/ @c2; } location @c2 { proxy_pass http://@covenant-ip-address; proxy_redirect off; proxy_ssl_verify off; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; }}then Restart the Nginx service.service nginx restartNow your Nginx redirector is ready, on your futur attack make sure to put the @ip address of the machine where nginx is installed and configured on the covenant Listener Tab.The video below is the PoC of this setup ;)Enjoy, and don’t forget to leave a beautifull comment below … " } ]
